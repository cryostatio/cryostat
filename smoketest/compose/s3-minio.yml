version: "3"
services:
  cryostat:
    environment:
      STORAGE_BUCKETS_ARCHIVES_NAME: archivedrecordings
      QUARKUS_S3_ENDPOINT_OVERRIDE: http://s3:9000
      QUARKUS_S3_PATH_STYLE_ACCESS: "true" # needed for Minio, but if the environment and specific S3 impl supports DNS subdomain style access then that should be preferred
      QUARKUS_S3_AWS_REGION: us-east-1
      QUARKUS_S3_AWS_CREDENTIALS_TYPE: static
      QUARKUS_S3_AWS_CREDENTIALS_STATIC_PROVIDER_ACCESS_KEY_ID: minioroot
      QUARKUS_S3_AWS_CREDENTIALS_STATIC_PROVIDER_SECRET_ACCESS_KEY: minioroot
      AWS_ACCESS_KEY_ID: minioroot
      AWS_SECRET_ACCESS_KEY: minioroot
  s3:
    image: docker.io/minio/minio:latest
    hostname: s3
    ports:
      - "9001:9001"
      - "9000:9000"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioroot
      MINIO_ROOT_PASSWORD: minioroot
      MINIO_DEFAULT_BUCKETS: archivedrecordings
    volumes:
      - minio_data:/data
      - minio_certs:/certs
    labels:
      kompose.service.expose: "minio"
    restart: always
    healthcheck:
      test:
        - CMD-SHELL
        - mc
        - ready
        - local
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s

volumes:
  minio_data:
    driver: local
  minio_certs:
    driver: local
    
